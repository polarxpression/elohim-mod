// File: build.gradle
// FORGE Gradle build script

plugins {
    id 'net.minecraftforge.gradle' version '6.0.+' // Using a common version range for ForgeGradle
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT' apply false // Optional: if you decide to use Mixins with Forge later
    id 'maven-publish'
}

version = '1.0.0'
group = 'io.polarxpress.elohimvoice_forge' // Changed group slightly for Forge version
archivesBaseName = 'elohim-voice-forge'

// Mojang ships Java 17 to end users starting in 1.18.2.
// We recommend using Java 17 to compile your mod.
// If you want to support Java 8, you will need to include the Mojang CoreContainsDataFixer library.
// See https://docs.minecraftforge.net/en/latest/gettingstarted/buildscripts/#java-versions
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel: Version: MinecraftVersion
    // Official mappings have no channel, just version and MC version.
    // Example: mappings 'official', '1.20.1'
    // Mappings from ParchmentMC can be used to supplement official mappings.
    // Example: mappings 'parchment', '2023.10.08-1.20.1'
    mappings channel: 'official', version: '1.20.1'

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a user client is sources,STACKTRACE
            property 'forge.logging.console.level', 'debug'
            property 'forge.logging.markers', 'REGISTRIES'

            // Specify the mod IDs to load in the development environment.
            // mods 'elohimvoice_forge' // Your mod id

            // JVM arguments for the client run configuration.
            // jvmArgs.add '-XX:+AllowEnhancedClassRedefinition' // For advanced debugging

            // Program arguments for the client run configuration.
            // programArgs.addAll '--username', 'Dev', '--skipIntegratedServerCheck'
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.console.level', 'debug'
            property 'forge.logging.markers', 'REGISTRIES'

            // mods 'elohimvoice_forge' // Your mod id

            // JVM arguments for the server run configuration.
            // jvmArgs.add '-XX:+AllowEnhancedClassRedefinition'

            // Program arguments for the server run configuration.
            // programArgs.addAll '--nogui'
        }

        // This run config runs with all mods loaded.
        // It supports the same properties as the client run config.
        gameTestServer {
            workingDirectory project.file('run/gameTestServer')

            property 'forge.logging.console.level', 'debug'
            property 'forge.logging.markers', 'REGISTRIES'

            // mods 'elohimvoice_forge' // Your mod id
        }

        data {
            workingDirectory project.file('run/data')

            property 'forge.logging.console.level', 'debug'
            property 'forge.logging.markers', 'REGISTRIES'

            // Specify the mod IDs to load in the data generator.
            // mods 'elohimvoice_forge'

            // JVM arguments for the data generator.
            // jvmArgs.add '-XX:+AllowEnhancedClassRedefinition'

            // Program arguments for the data generator.
            // args.addAll '--mod', 'elohimvoice_forge', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

    // Example:
    // maven {
    //     url = "https://maven.example.com/"
    // }
    mavenCentral() // Ensure mavenCentral is present for other dependencies if needed
}

dependencies {
    // Specify the version of Minecraft to use. If this is any group other than 'net.minecraft', it is assumed
    // that the dep is a ForgeGradle 'implementation' dependency, and not the actual Minecraft game.
    minecraft 'net.minecraftforge:forge:1.20.1-47.2.0' // Using a specific common Forge version for 1.20.1

    // If you want to use Mixins with Forge, uncomment the following lines:
    // implementation fg.deobf('org.spongepowered:mixin:0.8.5-SNAPSHOT') // Check for the latest compatible Mixin version
    // annotationProcessor 'org.spongepowered:mixin:0.8.5-SNAPSHOT:processor'
}

// Example for how to get properties into the manifest for reading by the runtime..
// java {
//     toolchain.languageVersion = JavaLanguageVersion.of(17)
//     withSourcesJar()
//     withJavadocJar()
// }
//
// tasks.withType(JavaCompile).configureEach {
//     options.encoding = 'UTF-8' // Use UTF-8 for Java compilation
//     options.getRelease().set(17)
// }
//
// jar {
//     manifest {
//         attributes([
//                 "Specification-Title"     : "Elohim Voice Forge",
//                 "Specification-Vendor"    : "YourName",
//                 "Specification-Version"   : "1", // We are version 1 of ourselves
//                 "Implementation-Title"    : project.name,
//                 "Implementation-Version"  : project.jar.archiveVersion,
//                 "Implementation-Vendor"   : "YourName",
//                 "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
//         ])
//     }
// }


// Example configuration to allow publishing to the Maven local repository
// publishing {
//     publications {
//         mavenJava(MavenPublication) {
//             artifactId = project.archivesBaseName
//             from components.java
//         }
//     }
//     repositories {
//         mavenLocal()
//     }
// }

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use UTF-8 for Java compilation
}
